{"version":3,"sources":["assets/noPosterImage.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","props","color","Message","text","prototype","PropTypes","string","isRequired","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","map","movie","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","isshow","TVContainer","Content","Cover","bgImage","Backdrop","Data","h3","ItemContainer","Item","Divider","Overview","p","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","DetailPresenter","Form","form","Input","input","ResearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","target","undefined","preventDefault","searchByTerm","SearchPresenter","Header","header","List","ul","li","current","SLink","Link","withRouter","Routers","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec021d71.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterImage.c0d876ef.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  :not(:last-child){\n    margin-bottom: 50px\n  }\n}\n`;\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: bold;\n`;\nconst Grid =styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({title, children}) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height:100vh;\n  width: 100vw;\n  display:flex;\n  justify-content:center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => <Container><span role=\"img\" aria-label=\"Loading\">⏲</span></Container>;\n\nexport default Loader;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({text, color}) => <Container><Text color={color}>{text}</Text></Container>\n\nMessage.prototype = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n}\n\nexport default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\"\n\nconst Container = styled.div`\n  font-size:12px;\n`;\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 3px;\n  background-position: center;\n  transition: .1s linear;\n`;\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  transition: .1s linear;\n  opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  &:hover {\n    ${Image} {\n      opacity: 0.3\n    }\n    ${Rating} {\n      opacity: 1\n    }\n  }\n  position:relative;\n`;\n\nconst Title = styled.span`\n  display: block;\n  font-size:12px;\n  margin-bottom: 3px;\n`;\nconst Year = styled.span`\n  font-size:10px;\n  color: rgba(255,255,255,0.5);\n`;\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie}) => \n<Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n  <Container>\n    <ImageContainer>\n      <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300/${imageUrl}` : require(\"../assets/noPosterImage.png\")}></Image>\n      <Rating>\n        <span role=\"img\" aria-label=\"image\">⭐</span>{\" \"}\n        {rating}/10\n      </Rating>\n    </ImageContainer>\n    <Title>{title.length > 15 ? `${title.substring(0, 18)}...` : title}</Title>\n    <Year>{year}</Year>\n  </Container>\n</Link>\n\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n}\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\"\nimport Section from \"../../Components/Section\"\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\nconst HomePresenter = ({nowPlaying, popular, upcoming, loading, error}) => \n<>\n  <Helmet>\n    <title>Movies | Nomflix</title>\n  </Helmet>\n  {loading ? (<Loader />) : (\n  <Container>\n    {nowPlaying && nowPlaying.length > 0 && (\n      <Section title=\"now Playing\">{nowPlaying.map(movie => \n        <Poster \n          key={movie.id} \n          id={movie.id} \n          title={movie.original_title} \n          imageUrl={movie.poster_path} \n          rating={movie.vote_average} \n          year={movie.release_date && movie.release_date.substring(0, 4)} \n          isMovie={true}>\n        </Poster>\n    )}</Section>\n    )}\n    {upcoming && upcoming.length > 0 && (\n      <Section title=\"upcoming Movies\">{upcoming.map(movie => <Poster key={movie.id} id={movie.id} title={movie.original_title} imageUrl={movie.poster_path} rating={movie.vote_average} year={movie.release_date && movie.release_date.substring(0, 4)} isMovie={true}/>)}</Section>\n    )}\n    {popular && popular.length > 0 && (\n      <Section title=\"popular Movies\">{popular.map(movie => <Poster key={movie.id} id={movie.id} title={movie.original_title} imageUrl={movie.poster_path} rating={movie.vote_average} year={movie.release_date && movie.release_date.substring(0, 4)} isMovie={true}/>)}</Section>\n    )}\n    {error && <Message color=\"#e74c3c\" text={error} />}\n  </Container>)}\n</>;\n\nHomePresenter.propTypes = {\n  nowPlaying:PropTypes.array,\n  popular:PropTypes.array,\n  upcoming:PropTypes.array,\n  loading:PropTypes.bool.isRequired,\n  error:PropTypes.string\n}\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"dcffc429c89f59ad0dd490e7b48b2ad2\",\n    language: \"en-US\"\n  }\n})\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) => api.get(`movie/${id}`, {\n    params: {\n      append_to_response: \"videos\"\n    }\n  }),\n  search: (term) => api.get(\"search/movie\", {\n    params: {\n      query: encodeURIComponent(term)\n    }\n  })\n}\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) => api.get(`tv/${id}`, {\n    params: {\n      append_to_response: \"videos\"\n    }\n  }),\n  search: (term) => api.get(\"search/tv\", {\n    params: {\n      query: encodeURIComponent(term)\n    }\n  })\n}\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const { data: { results: nowPlaying }} = await moviesApi.nowPlaying();\n      const { data: { results: upcoming }} = await moviesApi.upcoming();\n      const { data: { results: popular }} = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      })\n    } catch {\n      this.setState({\n        error: \"Can't find movies information.\"\n      })\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter \n        nowPlaying={nowPlaying} \n        upcoming={upcoming} \n        popular={popular} \n        error={error} \n        loading={loading} \n      />\n    )\n  }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) => \n<>\n  <Helmet>\n    <title>Movies | Nomflix</title>\n  </Helmet>\n  {\n    loading ? (<Loader />) : (\n  <Container>\n    <Helmet>\n      <title>TV Show | Nomflix</title>\n    </Helmet>\n    {topRated && topRated.length > 0 && <Section title=\"Top Rated Show\">{topRated.map(show => \n        <Poster \n          key={show.id} \n          id={show.id} \n          title={show.original_name} \n          imageUrl={show.poster_path} \n          rating={show.vote_average} \n          year={show.first_air_date && show.first_air_date.substring(0, 4)} \n          isshow={true}>\n        </Poster>)}</Section>}\n    {popular && popular.length > 0 && <Section title=\"Popular Show\">{popular.map(show => \n        <Poster \n          key={show.id} \n          id={show.id} \n          title={show.original_name} \n          imageUrl={show.poster_path} \n          rating={show.vote_average} \n          year={show.first_air_date && show.first_air_date.substring(0, 4)} \n          isshow={true}>\n        </Poster>)}</Section>}\n    {airingToday && airingToday.length > 0 && <Section title=\"Airing Show\">{airingToday.map(show => \n        <Poster \n          key={show.id} \n          id={show.id} \n          title={show.original_name} \n          imageUrl={show.poster_path} \n          rating={show.vote_average} \n          year={show.first_air_date && show.first_air_date.substring(0, 4)} \n          isshow={true}>\n        </Poster>)}</Section>}\n    {error && <Message color=\"#e74c3c\" text={error} />}\n  </Container>)}\n</>;\n\nTVPresenter.propTypes = {\n  topRated:PropTypes.array,\n  popular:PropTypes.array,\n  airingToday:PropTypes.array,\n  loading:PropTypes.bool.isRequired,\n  error:PropTypes.string\n}\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true\n  }\n\n  async componentDidMount() {\n    try {\n      const { data: { results: topRated}} = await tvApi.topRated();\n      const { data: { results: popular}} = await tvApi.popular();\n      const { data: { results: airingToday}} = await tvApi.airingToday();\n      this.setState({\n        topRated,\n        popular,\n        airingToday\n      })\n    } catch {\n      this.setState({\n        error: \"Cant' find TV information.\"\n      })\n    } finally {\n      this.setState({loading: false});\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading} = this.state;\n    return (\n      <TVPresenter \n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    )\n  }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  padding: 50px;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size:34px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Item = styled.span`\n\n`;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  color: white;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst HomePresenter = ({result, loading, error}) => \nloading ? (\n  <>\n    <Helmet>Loading... | Nomflix</Helmet>\n    <Loader />\n  </>\n) : (\n  <>\n  <Helmet>\n    <title>{result.original_title ? result.original_title : result.original_name} | Nomflix</title>\n  </Helmet>\n  <Container>\n    <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\n    <Content>\n      <Cover bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : require(\"../../assets/noPosterImage.png\")} />\n      <Data>\n\n        <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n\n        <ItemContainer>\n          <Item>{result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}</Item>\n          <Divider>🍩</Divider>\n          <Item>{result.runtime ? result.runtime : result.episode_run_time[0]} min</Item>\n          <Divider>🍩</Divider>\n          <Item>{result.genres && result.genres.map((genre, index) => index === result.genres.length - 1 ? genre.name : `${genre.name} / ` )}</Item>\n        </ItemContainer>\n\n        <Overview>\n          {result.overview}\n        </Overview>\n\n      </Data>\n    </Content>\n  </Container>\n  </>\n)\n;\n\nHomePresenter.propTypes = {\n  result:PropTypes.object,\n  loading:PropTypes.bool.isRequired,\n  error:PropTypes.string\n}\n\nexport default HomePresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const { location: {pathname}} = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if(isNaN(parsedId)) {\n      return push(\"/\");\n    }\n\n    let result = null;\n    try {\n      if(isMovie) {\n        ({data: result} = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({data: result} = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({error: \"Cant' find anything.\"})\n    } finally {\n      this.setState({loading: false, result})\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return (\n      <DetailPresenter \n        result={result} \n        error={error} \n        loading={loading} \n      />\n    )\n  }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all:unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst ResearchPresenter = ({movieResults, tvResults, loading, error, searchTerm, handleSubmit, updateTerm}) => \n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input placeholder=\"Search Movie or TV Shows...\" value={searchTerm} onChange={updateTerm} />\n    </Form>\n    {loading ? <Loader /> : <>\n    {movieResults && movieResults.length > 0 && <Section title=\"Movie Results\">{movieResults.map(movie => \n      <Poster \n        key={movie.id} \n        id={movie.id} \n        title={movie.original_title} \n        imageUrl={movie.poster_path} \n        rating={movie.vote_average} \n        year={movie.release_date && movie.release_date.substring(0, 4)} \n        isMovie={true}>\n      </Poster>  \n    )}</Section>}\n    {tvResults && tvResults.length > 0 && <Section title=\"TV Show Results\">{tvResults.map(show => \n      <Poster \n        key={show.id} \n        id={show.id} \n        title={show.original_name} \n        imageUrl={show.poster_path} \n        rating={show.vote_average} \n        year={show.first_air_date && show.first_air_date.substring(0, 4)} \n        isshow={true}>\n      </Poster>\n    )}</Section>}\n    </>}\n    {error && <Message color=\"#e74c3c\" text={error} />}\n    {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && <Message text=\"Nothing found\" color=\"#95a5a6\" />}\n  </Container>\n;\n\nResearchPresenter.propTypes = {\n  movieResults:PropTypes.array,\n  tvResults:PropTypes.array,\n  loading:PropTypes.bool.isRequired,\n  error:PropTypes.string,\n  searchTerm:PropTypes.string,\n  handleSubmit:PropTypes.func.isRequired,\n  updateTerm:PropTypes.func.isRequired,\n}\n\nexport default ResearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false\n  };\n\n  componentDidMount() {\n    this.handleSubmit();\n  }\n\n  updateTerm = (event) => {\n    const { target: { value} } = event;\n    this.setState({\n      searchTerm: value\n    })\n  }\n\n  handleSubmit = event => {\n    if(event !== undefined) {\n      event.preventDefault();\n    }\n    const { searchTerm } = this.state;\n    if(searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  }\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    try {\n      this.setState({ loading: true });\n      const { data: { results: movieResults }} = await moviesApi.search(searchTerm);\n      const { data: { results: tvResults }} = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({ error: \"Cant't find results.\" })\n    } finally {\n      this.setState({ loading: false })\n    }\n  }\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading} = this.state;\n    return (\n      <SearchPresenter \n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    )\n  }\n}","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color:white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items:center;\n  background-color: rgba(20,20,20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 70px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center; \n`;\n\nconst HeaderC = ({location: {pathname}}) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}><SLink to=\"/\">Movies</SLink></Item>\n      <Item current={pathname === \"/tv\"}><SLink to=\"/tv\">TV</SLink></Item>\n      <Item current={pathname === \"/search\"}><SLink to=\"/search\">Search</SLink></Item>\n    </List>\n  </Header>\n);\n\nexport default withRouter(HeaderC);","import React from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport Home from \"../Routes/Home\"\nimport TV from \"../Routes/TV\"\nimport Detail from \"../Routes/Detail\"\nimport Search from \"../Routes/Search\"\nimport Header from \"./Header\";\n\nconst Routers = () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"https://mankyung.github.io/nomflix/\" exact component={Home} />\n        <Route path=\"https://mankyung.github.io/nomflix/tv\" exact component={TV} />\n        <Route path=\"https://mankyung.github.io/nomflix/search\" component={Search} />\n        <Route path=\"https://mankyung.github.io/nomflix/movie/:id\" component={Detail} />\n        <Route path=\"https://mankyung.github.io/nomflix/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n)\n\nexport default Routers;","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n  ${reset};\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: -apple-system, BlinkMacSystemFont,Roboto, Oxygen;\n    font-size: 12px;\n    background-color: rgba(20,20,20,1);\n    color:white;\n    padding-top: 50px;\n  }\n`;\n\nexport default globalStyles;","import React, { Component } from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\"\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    )\n  }\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}